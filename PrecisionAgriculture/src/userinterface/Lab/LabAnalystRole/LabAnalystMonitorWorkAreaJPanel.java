/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Lab.LabAnalystRole;

import Business.EcoSystem;
import Business.Enterprise.DistributorEnterprise;
import Business.Enterprise.Enterprise;
import Business.Farmer.Farmer;
import Business.Lab.LabResults;
import Business.Lab.LabResultsDirectory;
import Business.Network.Network;
import Business.Organization.FertilizerOrganization;
import Business.Organization.LabOrganization;
import Business.Organization.Organization;
import static Business.Organization.Organization.Type.LabOrganization;
import Business.Organization.SowingOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LabWorkRequest;
import Business.WorkQueue.SowingWorkRequest;
import Business.WorkQueue.WorkRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jocel
 */
public class LabAnalystMonitorWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form LabAnalystMonitorWorkAreaJPanel
     */
    
    private JPanel userProcessContainer;
    private LabOrganization labOrganization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private EcoSystem system;
    private Farmer farmer;
    private LabResults labResults;
    
    public LabAnalystMonitorWorkAreaJPanel(JPanel userProcessContainer, UserAccount userAccount, LabOrganization labOrganization, Enterprise enterprise, EcoSystem system) {
        initComponents();
         this.userProcessContainer = userProcessContainer;
        this.labOrganization= labOrganization;
        this.enterprise = enterprise;
        this.userAccount = userAccount;
        this.system=system;
        labResults = new LabResults();
        populateTable();
    }
private void populateTable() 
    {
        DefaultTableModel model = (DefaultTableModel) farmersAssignedToLabJTable.getModel();
        
        model.setRowCount(0);
        
        for (WorkRequest workRequest : userAccount.getWorkQueue().getWorkRequestList())
        {
            Object[] row = new Object[6];
            row[0] = ((Farmer)((LabWorkRequest)workRequest).getData()).getFarmerId();
            row[1] = ((Farmer)((LabWorkRequest)workRequest).getData()).getFarmerName();
            row[2] = ((Farmer)((LabWorkRequest)workRequest).getData()).getFarmSize();
            row[3] = ((Farmer)((LabWorkRequest)workRequest).getData()).getCropName();
            row[4] = (((LabWorkRequest)workRequest)).getStatus();
            row[5] = ((Farmer)((LabWorkRequest)workRequest).getData());
            model.addRow(row);
            
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane = new javax.swing.JScrollPane();
        farmersAssignedToLabJTable = new javax.swing.JTable();
        assignedFarmersLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        fertilizerTxtFld = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        quantityTxtFld = new javax.swing.JTextField();
        sendDataToFarmerJButton = new javax.swing.JButton();

        farmersAssignedToLabJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Farmer ID", "Farmer Name", "Crop Selected", "Fertilizer Status", "Status", "Object"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane.setViewportView(farmersAssignedToLabJTable);
        if (farmersAssignedToLabJTable.getColumnModel().getColumnCount() > 0) {
            farmersAssignedToLabJTable.getColumnModel().getColumn(5).setMinWidth(0);
            farmersAssignedToLabJTable.getColumnModel().getColumn(5).setPreferredWidth(0);
            farmersAssignedToLabJTable.getColumnModel().getColumn(5).setMaxWidth(0);
        }

        assignedFarmersLabel.setText("Farmer's Assigned to me:");

        jLabel5.setText("Recommemded Fertilizer:");

        fertilizerTxtFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fertilizerTxtFldActionPerformed(evt);
            }
        });

        jLabel6.setText("Recommended Quantity:");

        sendDataToFarmerJButton.setText("Send Data To Farmer");
        sendDataToFarmerJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendDataToFarmerJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(sendDataToFarmerJButton))
                            .addComponent(fertilizerTxtFld, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
                            .addComponent(quantityTxtFld))
                        .addGap(93, 93, 93))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(assignedFarmersLabel)
                                .addGap(333, 333, 333))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 636, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(assignedFarmersLabel)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fertilizerTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(quantityTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(sendDataToFarmerJButton)
                .addContainerGap(289, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void fertilizerTxtFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fertilizerTxtFldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fertilizerTxtFldActionPerformed

    private void sendDataToFarmerJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendDataToFarmerJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = farmersAssignedToLabJTable.getSelectedRow();
       
       if (selectedRow < 0)
       {
      
          JOptionPane.showMessageDialog(null, "Please Select a Row");
           return;
       }
        Farmer farmer = (Farmer)farmersAssignedToLabJTable.getValueAt(selectedRow,5);
        String recommendedFertilizer=fertilizerTxtFld.getText();
        String recommendedFertilizerQty=quantityTxtFld.getText();
        farmer.setFertilizerUsed(recommendedFertilizer);
        farmer.setFertilizerQuantity(recommendedFertilizerQty);
        
        for (WorkRequest workRequest : userAccount.getWorkQueue().getWorkRequestList())
        {
            farmer =(((Farmer)((LabWorkRequest)workRequest).getData()));
            LabResultsDirectory labResultsDirectory=new LabResultsDirectory();
            labResults = labResultsDirectory.createLabresults(farmer, recommendedFertilizer, recommendedFertilizerQty);
            ((LabWorkRequest)workRequest).setData(farmer);
            labOrganization.getWorkQueue().getWorkRequestList().add(workRequest);
        }
        

//       for (WorkRequest workRequest : userAccount.getWorkQueue().getWorkRequestList())
//        {
//            farmer=(((Farmer)((LabWorkRequest)workRequest).getData()));
//            LabResultsDirectory labResultsDirectory=new LabResultsDirectory();
//            labResults = labResultsDirectory.createLabresults(farmer, recommendedFertilizer, recommendedFertilizerQty);
//            ((LabWorkRequest)workRequest).setData(labResults);
//            labOrganization.getWorkQueue().getWorkRequestList().add(workRequest);
//        }
//       
       
//       for(Network network : system.getNetworkList())
//       {
//           if(network.getName().equalsIgnoreCase("Boston"))
//           {
//               for(Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList())
//               {
//                   if(enterprise instanceof DistributorEnterprise)
//                   {
//                       for(Organization organization : enterprise.getOrganizationDirectory().getOrganizationList())
//                       {
//                           if(organization instanceof FertilizerOrganization)
//                           {
//                               organization.getWorkQueue().getWorkRequestList().add(labResults);
//                           }
//                       }
//                   }
//               }
//       }
       JOptionPane.showMessageDialog(null, "Recommended Data sent to Farmer");
       
       
       
        
    }//GEN-LAST:event_sendDataToFarmerJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel assignedFarmersLabel;
    private javax.swing.JTable farmersAssignedToLabJTable;
    private javax.swing.JTextField fertilizerTxtFld;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JTextField quantityTxtFld;
    private javax.swing.JButton sendDataToFarmerJButton;
    // End of variables declaration//GEN-END:variables
}
