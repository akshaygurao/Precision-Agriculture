/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.IrrigationAdminRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Farmer.Farmer;
import Business.Organization.IrrigationOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.IrrigationWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aksha
 */
public class IrrigationAdminWorkAreaPanel extends javax.swing.JPanel {
private JPanel userProcessContainer;
    private IrrigationOrganization irrigationOrganization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    //private Organization organization;
    /**
     * Creates new form SowingAdminWorkAreaPanel
     */
    

    public IrrigationAdminWorkAreaPanel(JPanel userProcessContainer, UserAccount account, IrrigationOrganization irrigationOrganization, Enterprise enterprise, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
       this.irrigationOrganization = irrigationOrganization;
        this.enterprise = enterprise;
        this.userAccount = account;
        
        populateTable();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane = new javax.swing.JScrollPane();
        farmersCreatedJTable = new javax.swing.JTable();
        assignToMeJBtn = new javax.swing.JButton();
        monitorJBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        farmersCreatedJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Farmer ID", "Farmer Name", "Object", "Object"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane.setViewportView(farmersCreatedJTable);
        if (farmersCreatedJTable.getColumnModel().getColumnCount() > 0) {
            farmersCreatedJTable.getColumnModel().getColumn(2).setMinWidth(0);
            farmersCreatedJTable.getColumnModel().getColumn(2).setPreferredWidth(0);
            farmersCreatedJTable.getColumnModel().getColumn(2).setMaxWidth(0);
            farmersCreatedJTable.getColumnModel().getColumn(3).setMinWidth(0);
            farmersCreatedJTable.getColumnModel().getColumn(3).setPreferredWidth(0);
            farmersCreatedJTable.getColumnModel().getColumn(3).setMaxWidth(0);
        }

        assignToMeJBtn.setText("Assign to me");
        assignToMeJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignToMeJBtnActionPerformed(evt);
            }
        });

        monitorJBtn.setText("Monitor Assigned Farmers");
        monitorJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monitorJBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Irrigation Employee Work Area Panel");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(assignToMeJBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(monitorJBtn))
                            .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(jLabel1)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assignToMeJBtn)
                    .addComponent(monitorJBtn))
                .addContainerGap(248, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void monitorJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monitorJBtnActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("IrrigationAdminMonitorAreaJPanel", new IrrigationAdminMonitorAreaJPanel(userProcessContainer, userAccount, enterprise));
        layout.next(userProcessContainer);
    }//GEN-LAST:event_monitorJBtnActionPerformed

    private void assignToMeJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignToMeJBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = farmersCreatedJTable.getSelectedRow();
        
        if (selectedRow < 0)
        {
       
           JOptionPane.showMessageDialog(null, "Please Select a Row");
            return;
        }
        Farmer farmer = (Farmer)farmersCreatedJTable.getValueAt(selectedRow, 2);
        
        for (WorkRequest workRequest : userAccount.getWorkQueue().getWorkRequestList())
        {
            if(((Farmer)((IrrigationWorkRequest)workRequest).getData()).getFarmerId()==farmer.getFarmerId())
            {
                JOptionPane.showMessageDialog(null, "Farmer is already assigned to me!!");
                return;  
            }
        }
        for(WorkRequest workRequest : irrigationOrganization.getWorkQueue().getWorkRequestList())
        {
            if(((Farmer)((IrrigationWorkRequest)workRequest).getData()).getFarmerId() == workRequest.getFarmerUserId())
            {
                IrrigationWorkRequest irrigationWorkRequest = (IrrigationWorkRequest)workRequest;
                irrigationWorkRequest.setReceiver(userAccount);
                irrigationWorkRequest.setRequestDate(new Date());
                irrigationWorkRequest.setStatus("Requested Irrigation");
                irrigationWorkRequest.setData(farmer);

                irrigationOrganization.getWorkQueue().getWorkRequestList().add(irrigationWorkRequest);
                userAccount.getWorkQueue().getWorkRequestList().add(irrigationWorkRequest);
                
                JOptionPane.showMessageDialog(null, "Farmer assigned to me Successfully!!");
                return;
            }
        }
        
        
    }//GEN-LAST:event_assignToMeJBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignToMeJBtn;
    private javax.swing.JTable farmersCreatedJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JButton monitorJBtn;
    // End of variables declaration//GEN-END:variables

    private void populateTable() 
    {
        DefaultTableModel model = (DefaultTableModel) farmersCreatedJTable.getModel();
        
        model.setRowCount(0);
        
        for (WorkRequest workRequest : irrigationOrganization.getWorkQueue().getWorkRequestList())
        {
            IrrigationWorkRequest irrigationWorkRequest = (IrrigationWorkRequest) workRequest;
            Object[] row = new Object[4];
            row[0] = ((Farmer)irrigationWorkRequest.getData()).getFarmerId();
            row[1] = ((Farmer)irrigationWorkRequest.getData()).getFarmerName();
            row[2] = irrigationWorkRequest.getData();
            row[3] = irrigationWorkRequest;
//            row[2] =((Farmer)sowingWorkRequest.getData()).getUserAccount().getUsername();
//            row[3] = ((Farmer)sowingWorkRequest.getData()).getSowingAdminId();
//            row[4] = ((Farmer)sowingWorkRequest.getData());
//            row[5] = sowingWorkRequest;
            
            
            model.addRow(row);
        }
    }
    
}
