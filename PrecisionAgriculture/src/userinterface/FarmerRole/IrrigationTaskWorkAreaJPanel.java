/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.FarmerRole;

import Business.Farmer.Farmer;
import Business.Organization.IrrigationOrganization;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.Organization.SowingOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.IrrigationWorkRequest;
import Business.WorkQueue.SowingWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author aksha
 */
public class IrrigationTaskWorkAreaJPanel extends javax.swing.JPanel {
private JPanel userProcessContainer;
private OrganizationDirectory organizationDirectory;
private Farmer farmer;
private UserAccount userAccount;
private IrrigationWorkRequest irrigationWorkRequest;
    /**
     * Creates new form IrrigationTaskWorkAreaJPanel
     */
   

    IrrigationTaskWorkAreaJPanel(JPanel userProcessContainer, OrganizationDirectory organizationDirectory, Farmer farmer) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = farmer.getUserAccount();
        this.farmer = farmer;
        this.organizationDirectory = organizationDirectory;
        
        for(WorkRequest workRequest: userAccount.getWorkQueue().getWorkRequestList())
        {
            if(workRequest instanceof IrrigationWorkRequest && workRequest != null && workRequest.getStatus().equalsIgnoreCase("Irrigation Started"))
            {
                irrigationWorkRequest = (IrrigationWorkRequest)workRequest;
                setDataInFields(workRequest);
                startJBtn.setEnabled(false);
                
            }
            else if(workRequest instanceof IrrigationWorkRequest && workRequest != null && workRequest.getStatus().equalsIgnoreCase("Reported to Irrigation Organization"))
            {
                
                startJBtn.setEnabled(true);
            }
            else if(workRequest instanceof IrrigationWorkRequest && workRequest != null && !workRequest.getStatus().equalsIgnoreCase("Irrigation Started"))
            {
                setDataInFields(workRequest);
                startJBtn.setEnabled(false);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        maturityTxtFld = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        soilMoistureTxtFld = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        heightTxtFld = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        daysTxtFld = new javax.swing.JTextField();
        startJBtn = new javax.swing.JButton();
        backJBtn = new javax.swing.JButton();
        irrigationStatusLabel = new javax.swing.JLabel();
        statusTextFeld = new javax.swing.JTextField();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Irrigation Task - Farmer Role");

        jLabel2.setText("Crop Maturity:");

        maturityTxtFld.setEnabled(false);

        jLabel3.setText("Soil Moisture:");

        soilMoistureTxtFld.setEnabled(false);

        jLabel4.setText("Crop Height:");

        heightTxtFld.setEnabled(false);

        jLabel5.setText("Enter Irrigation Days:");

        startJBtn.setText("Request Admin to start the automatic irrigation process");
        startJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startJBtnActionPerformed(evt);
            }
        });

        backJBtn.setText("<< Back");
        backJBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJBtnActionPerformed(evt);
            }
        });

        irrigationStatusLabel.setText("Irrigation Status:");

        statusTextFeld.setEnabled(false);
        statusTextFeld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusTextFeldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(191, 191, 191)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(173, 173, 173)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(startJBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel3))
                                        .addGap(37, 37, 37))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(irrigationStatusLabel)
                                        .addComponent(jLabel5)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(maturityTxtFld)
                                    .addComponent(soilMoistureTxtFld)
                                    .addComponent(heightTxtFld)
                                    .addComponent(daysTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(statusTextFeld, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(backJBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(216, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maturityTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(soilMoistureTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(heightTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(daysTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(irrigationStatusLabel)
                    .addComponent(statusTextFeld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(startJBtn)
                .addGap(52, 52, 52)
                .addComponent(backJBtn)
                .addContainerGap(203, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJBtnActionPerformed

    private void startJBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startJBtnActionPerformed

//            irrigationWorkRequest= new IrrigationWorkRequest();
//            //irrigationWorkRequest.setReceiver(farmer.getUserAccount());
//            farmer.setIrrigationDays(Integer.parseInt(daysTxtFld.getText()));
//            irrigationWorkRequest.setRequestDate(new Date());
//            irrigationWorkRequest.setStatus("Irrigation Start request");
//            irrigationWorkRequest.setData(farmer);
//            irrigationWorkRequest.setFarmerUserId(farmer.getFarmerId());

              int farmerId = farmer.getFarmerId();
              if(daysTxtFld.getText().isEmpty())
              {
                  JOptionPane.showMessageDialog(null, "Please enter expected days");
                  return;
              }
              for(Organization organization : organizationDirectory.getOrganizationList())
            {
                if(organization instanceof IrrigationOrganization)
                {
                    for(WorkRequest iwr: organization.getWorkQueue().getWorkRequestList())
                    {
                        if(iwr.getFarmerUserId() == farmerId)
                        {
                            iwr.setStatus("Requested Irrigation");
                            farmer.setExpectedDays(Integer.parseInt(daysTxtFld.getText()));
                            statusTextFeld.setText(farmer.getStatus());
                            userAccount.getWorkQueue().getWorkRequestList().add(iwr);
                            JOptionPane.showMessageDialog(null, "Requested Irrigation");
                            startJBtn.setEnabled(false);
                            return;
                        }
                         
                    }
                }
            }
            
            userAccount.getWorkQueue().getWorkRequestList().add(irrigationWorkRequest);
//            for(Organization organization : organizationDirectory.getOrganizationList())
//            {
//                if(organization instanceof IrrigationOrganization)
//                {
//                    organization.getWorkQueue().getWorkRequestList().add(irrigationWorkRequest);
//                }
//            }
    }//GEN-LAST:event_startJBtnActionPerformed

    private void statusTextFeldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusTextFeldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_statusTextFeldActionPerformed

        // TODO add your handling code here:
                                             


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJBtn;
    private javax.swing.JTextField daysTxtFld;
    private javax.swing.JTextField heightTxtFld;
    private javax.swing.JLabel irrigationStatusLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField maturityTxtFld;
    private javax.swing.JTextField soilMoistureTxtFld;
    private javax.swing.JButton startJBtn;
    private javax.swing.JTextField statusTextFeld;
    // End of variables declaration//GEN-END:variables

    private void setDataInFields(WorkRequest workRequest) {
        daysTxtFld.setText(farmer.getExpectedDays()+"");
        statusTextFeld.setText(workRequest.getStatus());
    }
}
